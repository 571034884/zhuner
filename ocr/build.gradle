apply plugin: 'com.android.application'
apply plugin: 'com.aliyun.ams.emas-services'

def buildTime() {
    return new Date().format("MMddHHmmss", TimeZone.getDefault())
}
android {
    signingConfigs {
        config {
            keyAlias 'ocr'
            keyPassword 'aibabel*123'
            storeFile file('ocr.jks')
            storePassword 'aibabel*123'
        }
    }
    compileSdkVersion 28
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.aibabel.ocr"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 7
        versionName "1.1.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                /// 输出apk名称为ForWatch_v1.1(2)_2016-09-28_15-54-35.apk
                def version = "v${versionName}.${buildTime()}"
                def endIndex = outputFile.name.indexOf('.apk')
                def apkName = outputFile.name.substring(0, endIndex);
                def fileName = "拍照翻译_${version}.apk"
                output.outputFileName = fileName
            }
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    /*logger日志*/
    /*json解析*/
    /*OKGO网络请求框架*/
    //    implementation 'com.github.GeniusLiu:GestureViewBinder:v1.0.0'
    implementation 'com.android.support:appcompat-v7:28.+'
    implementation 'com.android.support:design:28.+'
    implementation 'com.android.support:cardview-v7:28.+'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.orhanobut:logger:2.1.1'
    implementation 'com.google.code.gson:gson:2.2.4'
    implementation 'com.alibaba:fastjson:1.2.2'
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    implementation 'jp.wasabeef:glide-transformations:3.3.0'
    implementation 'top.zibin:Luban:1.1.8'
    implementation 'com.umeng.sdk:common:1.5.0'
    implementation 'com.umeng.sdk:analytics:7.5.0'
    implementation 'com.jiangyy:dialog:1.0.4'
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    testImplementation 'junit:junit:4.12'
    //    implementation files('libs/nineoldandroids-2.4.0.jar')
    //    implementation files('libs/httpclient-4.5.5.jar')
    //    implementation files('libs/httpcore-4.4.9.jar')
    implementation files('libs/jpeglibrary.jar')
    //    implementation "com.aibabel:aidlaar:1.0.14"
    api project(path: ':aidlaar')
    compile project(path: ':baselibrary')
    implementation project(':baselibrary')
}
repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/repositories/releases"
    }
}
